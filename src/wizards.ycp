/**
 * File:	include/ftp-server/wizards.ycp
 * Package:	Configuration of ftp-server
 * Summary:	Wizards definitions
 * Authors:	Jozef Uhliarik <juhliarik@suse.cz>
 *
 * $Id: wizards.ycp 27914 2006-02-13 14:32:08Z juhliarik $
 */

{

textdomain "ftp-server";

import "Sequencer";
import "Wizard";

include "ftp-server/complex.ycp";
include "ftp-server/dialogs.ycp";




symbol RunDaemonSwitch() {
  if (FtpServer::vsftpd_edit)
     return `vsftpd;
  else
     return `pureftpd;
}

/**
 * Main workflow of the ftp-server configuration
 * @return sequence result
 */
any MainSequence() {
    map aliases = $[
	"init"          :   [ ``( RunDaemonSwitch()), false ],
        "vsftpd"        :   ``( RunFTPDialogsVsftpd()),
        "pureftpd"      :   ``( RunFTPDialogsPureftpd())
    ];

    map sequence = $[
	"ws_start" : "init",
        "init" : $[
            `pureftpd	: "pureftpd",
            `vsftpd	: "vsftpd"
        ],
        "pureftpd" : $[
            `abort      : `abort,
            `next       : `next,
	    `vsftpd	: "vsftpd"
        ],
        "vsftpd" : $[
            `abort      : `abort,
            `next       : `next,
	    `pureftpd	: "pureftpd"
        ]
    ];
    term temp = `Empty();
    Wizard::SetContents("", temp, "", false, false);
    any ret = Sequencer::Run(aliases, sequence);
    return ret;
}


/**
 * Whole configuration of ftp-server
 * @return sequence result
 */
any FtpdSequence() {

    map aliases = $[
	"read"	: [ ``( ReadDialog() ), true ],
	"main"	:   ``( MainSequence() ),
	"write"	: [ ``( WriteDialog() ), true ]
    ];

    map sequence = $[
	"ws_start" : "read",	
	"read" : $[
	    `abort	: `abort,
	    `next	: "main",
	],
	"main" : $[
	    `abort	: `abort,
	    `next	: "write"
	],
	"write" : $[
	    `abort	: `abort,
	    `next	: `next
	]
    ];

    Wizard::CreateDialog();
    Wizard::SetTitleIcon("yast-ftp-server");
    any ret = Sequencer::Run(aliases, sequence);

    UI::CloseDialog();
    return ret;
}

/**
 * Whole configuration of ftp-server but without reading and writing.
 * For use with autoinstallation.
 * @return sequence result
 */
any FtpServerAutoSequence() {

  map aliases = $[
     "main"  	:   ``( MainSequence() ),
     ];

  map sequence = $[
     "ws_start" : "main",
     "main" : $[
		`abort      : `abort,
		`next       : `next
	       ],
     ];

   Wizard::CreateDialog();
   Wizard::SetTitleIcon("yast-ftp-server");

   any ret = Sequencer::Run(aliases, sequence);

   UI::CloseDialog();
   return ret;

}

/* EOF */
}
